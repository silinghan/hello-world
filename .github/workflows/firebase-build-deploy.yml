# Name of the GitHub Actions workflow.
name: helloworld build pipeline

# Define when the workflow should run based on events.
'on':
  push:
    branches:
      - master
  pull_request:
    branches:
      - 'feature/**'

# Define the jobs that run in this workflow.
jobs:

  # Production environment build and deploy job.
  prod_build_deploy:
      runs-on: ubuntu-latest
      environment: prod
      # needs: [uat_build_deploy] # This job depends on the previous job.
      steps:
        # Checkout the source code from the repository.
        - uses: actions/checkout@v2

        # Set up Node.js in the runner environment.
        - uses: actions/setup-node@v2
          with:
            node-version: '16.14.0'

        # Install project dependencies.
        - run: npm install

        # Install the Angular CLI globally.
        - run: npm install -g @angular/cli

        # Create an environment variable file (.env) and populate it with secrets.
        - name: create env file
          run: |
            touch .env
            echo PRODUCTION=${{ secrets.PRODUCTION }} >> .env
            echo MAIL_URL=${{ secrets.MAIL_URL }} >> .env
            echo API_KEY=${{ secrets.API_KEY }} >> .env
            echo AUTH_DOMAIN=${{ secrets.AUTH_DOMAIN }} >> .env
            echo PROJECT_ID=${{ secrets.PROJECT_ID }} >> .env
            echo STORAGE_BUCKET=${{ secrets.STORAGE_BUCKET }} >> .env
            echo MESSAGING_SENDER_ID=${{ secrets.MESSAGING_SENDER_ID }} >> .env
            echo APP_ID=${{ secrets.APP_ID }} >> .env
            echo MEASUREMENT_ID=${{ secrets.MEASUREMENT_ID }} >> .env

        # Run a custom script (npm run config, assumed to be in package.json) if needed.
        - run: npm run config

        # Build the Angular application for production.
        - run: ng build --prod --progress --output-path=public

        # Deploy the application to Firebase Hosting using the Firebase Extended action.
        - uses: FirebaseExtended/action-hosting-deploy@v0
          with:
            repoToken: '${{ secrets.FIREBASE_TOKEN }}'
            firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_PROD }}'
            channelId: live
            projectId: helloworld-d8d88
          env:
            FIREBASE_CLI_PREVIEWS: hostingchannels
            PRODUCTION: '${{ secrets.PRODUCTION }}'
            MAIL_URL: '${{ secrets.MAIL_URL }}'
            API_KEY: '${{ secrets.API_KEY }}'